chem <- read.csv("../Data/field/soil_chemistry.csv")
# Create standard error function
se <- function(x){sd(x, na.rm = T) / sqrt(length(na.omit(x)))}
# Calculate C:N ratio
chem$cn <- chem$carbon_pct / chem$nitrogen_pct
# Create treatment subsets
forest <- chem[chem$treatment == "forest",]
mead <- chem[chem$treatment == "meadow",]
t.test(forest$whc_pct, mead$whc_pct, paired = T)
# Create treatment subsets
forest <- chem[chem$treatment == "Forest",]
mead <- chem[chem$treatment == "Meadow",]
# Create treatment subsets
forest <- chem[chem$location == "Forest",]
mead <- chem[chem$location == "Meadow",]
t.test(forest$whc_pct, mead$whc_pct, paired = T)
?t.test
t.test(whc_pct ~ location, data = chem, paired = T)
?tapply
t.test(phosphate_mgkg ~ location, data = chem, paired = T)
t.test(forest$phosphate_mgkg, mead$phosphate_mgkg, paired = T)
t.test(cn ~ location, data = chem, paired = T)
t.test(forest$cn, mead$cn, paired = T)
t.test(ammonium_mg_kg ~ location, data = chem, paired = T)
t.test(forest$ammonium_mg_kg, mead$ammonium_mg_kg, paired = T)
t.test(nitrate_mg_kg ~ location, data = chem, paired = T)
t.test(forest$nitrate_mg_kg, mead$nitrate_mg_kg, paired = T)
t.test(ph ~ location, data = chem, paired = T)
t.test(forest$ph, mead$ph, paired = T)
i <- "ph"
paste0("chem$", i)
get(paste0("chem$", i))
chem[,i]
tapply(chem[,i], chem$location, mean)
t.test(ph ~ location, data = chem, paired = T)
x <- t.test(ph ~ location, data = chem, paired = T)
library(ggplot2)
?ggpaired
??ggpaired
library(ggpubr)
ggpaired(chem, x = "location", y = "ph", color = location,
line.color = "gray")
View(chem)
ggpaired(chem, x = location, y = ph, color = location,
line.color = "gray")
View(ToothGrowth)
ggpaired(ToothGrowth, x = "supp", y = "len",
color = "supp", line.color = "gray", line.size = 0.4,
palette = "npg")
ggpaired(chem, x = "location", y = "ph", color = "location",
line.color = "gray")
ggpaired(chem, x = "location", y = "ph", color = "location",
line.color = "gray", palette = "jco")
ggpaired(chem, x = "location", y = "ph", fill = "location",
line.color = "gray", palette = "jco")
ggpaired(chem, x = "location", y = "ph", fill = "location",
line.color = "gray", palette = "jco", xlab = "location")
ggpaired(chem, x = "location", y = "ph", fill = "location",
line.color = "gray", palette = "jco", xlab = "Environment")
ggpaired(chem, x = "location", y = "ph", fill = "location",
line.color = "gray", palette = "jco", xlab = "Environment",
ylab = "ph")
ggpaired(chem, x = "location", y = "ph", fill = "Environment",
line.color = "gray", palette = "jco", xlab = "Environment",
ylab = "ph")
location
ggpaired(chem, x = "location", y = "ph", fill = "location",
line.color = "gray", palette = "jco", xlab = "Environment",
ylab = "ph")
ggpaired(chem, x = "location", y = "ph", fill = "location",
line.color = "gray", palette = "jco", xlab = "Environment",
ylab = "ph") +
stat_compare_means(paired = TRUE)
?stat_compare_means
ggpaired(chem, x = "location", y = "ph", fill = "location",
line.color = "gray", palette = "jco", xlab = "Environment",
ylab = "ph") +
stat_compare_means(method = "t.test", paired = TRUE)
t.test(ph ~ location, data = chem, paired = T)
ggpaired(chem, x = "location", y = "whc_pct", fill = "location",
line.color = "gray", palette = "jco",
xlab = "Environment", ylab = "whc_pct") +
stat_compare_means(method = "t.test", paired = TRUE)
ggpaired(chem, x = "location", y = "phosphate_mgkg", fill = "location",
line.color = "gray", palette = "jco",
xlab = "Environment", ylab = "phosphate_mgkg") +
stat_compare_means(method = "t.test", paired = TRUE)
ggpaired(chem, x = "location", y = "cn", fill = "location",
line.color = "gray", palette = "jco",
xlab = "Environment", ylab = "cn") +
stat_compare_means(method = "t.test", paired = TRUE)
t.test(ammonium_mg_kg ~ location, data = chem, paired = T)
t.test(nitrate_mg_kg ~ location, data = chem, paired = T)
ggpaired(chem, x = "location", y = "nitrate_mg_kg", fill = "location",
line.color = "gray", palette = "jco",
xlab = "Environment", ylab = "nitrate_mg_kg") +
stat_compare_means(method = "t.test", paired = TRUE)
0.1*0.1
10503/46687
4851/46687
0.184+0.302-0.077
27368/32219
27368/38130
10503/46687
0.275*0.816
10503/14089
14089/46687
(14089/46687)*(10503/14089)
0.745*0.302
(0.2 * 0.5) + (0.3 * 0.45) + (0.4 * 0.6)
0.02*0.2\
0.02*0.2
(0.7*0.01)+(0.2*0.02)+(0.1*0.05)
(0.02*0.016)/0.1
(0.02*0.016)/0.2
(0.02*0.2)/0.016
(0.2*0.05)+(0.6*0.1)+(0.15*0.1)+(0.05*0.05)
(0.05*0.2)/0.0875
(0.005*0.85)+(0.995*0.075)
(0.85*0.005)/((0.005*0.85)+(0.995*0.075))
(0.5*0.2)+(0.5*0.001)
(0.2*0.5)/((0.5*0.2)+(0.5*0.001))
